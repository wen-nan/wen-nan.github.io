<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - NarcissusBlog</title>
        <link>http://wen-nan.github.io/posts/</link>
        <description>所有文章 | NarcissusBlog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 21 Oct 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://wen-nan.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Python版本管理</title>
    <link>http://wen-nan.github.io/posts/python%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</link>
    <pubDate>Thu, 21 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/python%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</guid>
    <description><![CDATA[virtualenv virtualenv 所要解决的是同一个库不同版本共存的兼容问题。例如项目 A 需要用到 requests 的 1.0 版本，项目 B 需要用到 requests 的 2.0 版本。如果不使用工具的话，一台机器只能安装]]></description>
</item><item>
    <title>数据结构</title>
    <link>http://wen-nan.github.io/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <pubDate>Sat, 09 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
    <description><![CDATA[平衡查找树 在一棵含有N个结点的树中，我们希望树高为lgN，这样就能保证所有查找都能在lgN次比较内结束。但是在动态插入中保证树的完美平衡的代]]></description>
</item><item>
    <title>排序</title>
    <link>http://wen-nan.github.io/posts/%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Fri, 08 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[二叉堆 二叉堆主要应用有两个，一种是排序方法堆排序，第二是一种数据结构&ndash;优先队列。 二叉堆概览 二叉堆就是一种特殊的二叉树（完全二叉树]]></description>
</item><item>
    <title>双指针</title>
    <link>http://wen-nan.github.io/posts/%E5%8F%8C%E6%8C%87%E9%92%88/</link>
    <pubDate>Wed, 06 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E5%8F%8C%E6%8C%87%E9%92%88/</guid>
    <description><![CDATA[双指针技巧一般分为两类，一类是快慢指针，一类是左右指针。前者主要解决链表中的问题，比如典型的判断链表中是否有环；后者主要解决数组(或字符串)]]></description>
</item><item>
    <title>栈和队列</title>
    <link>http://wen-nan.github.io/posts/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</link>
    <pubDate>Tue, 05 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</guid>
    <description><![CDATA[队列是一种先进先出的数据结构，栈是一种先进后出的数据结构。这两种数据结构底层都是数组或者链表实现的，只是API限定了它们的特性。 栈实现队列 队]]></description>
</item><item>
    <title>数学技巧</title>
    <link>http://wen-nan.github.io/posts/%E6%95%B0%E5%AD%A6%E6%8A%80%E5%B7%A7/</link>
    <pubDate>Fri, 01 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E6%95%B0%E5%AD%A6%E6%8A%80%E5%B7%A7/</guid>
    <description><![CDATA[快速幂 根据幂运算的定义可以知道，如果要求 x 的 N 次幂，那么暴力方法就是用一个 N 次的循环，然后累乘得到结果，时间复杂度为o(N)。快速幂算法可以]]></description>
</item><item>
    <title>分治算法</title>
    <link>http://wen-nan.github.io/posts/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/</link>
    <pubDate>Thu, 30 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[分治算法可以认为是一种算法思想，通过将原问题分解成小规模的子问题，然后根据子问题的结果构造出原问题的答案。 归并排序 归并排序是最典型的分治算法]]></description>
</item><item>
    <title>回溯算法(或DFS)</title>
    <link>http://wen-nan.github.io/posts/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</link>
    <pubDate>Mon, 20 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</guid>
    <description><![CDATA[1、框架 深度优先搜索就是回溯算法，解决一个回溯问题，实际上就是一个决策树的遍历过程。需要思考三个问题： 路径：已经做出的选择。 选择列表：当前可]]></description>
</item><item>
    <title>Redis(七)对象</title>
    <link>http://wen-nan.github.io/posts/redis-%E5%AF%B9%E8%B1%A1/</link>
    <pubDate>Fri, 17 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/redis-%E5%AF%B9%E8%B1%A1/</guid>
    <description><![CDATA[Redis用到的主要数据结构有简单动态字符串(SDS)、双端链表、字典、跳跃表、压缩列整数集合等。但是Redis并没有直接使用这些数据结构来]]></description>
</item><item>
    <title>Redis(六)压缩列表</title>
    <link>http://wen-nan.github.io/posts/redis-%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</link>
    <pubDate>Mon, 13 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/redis-%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</guid>
    <description><![CDATA[压缩列表(ziplist)是列表键和哈希键的底层实现之一。当一个列表键只包含少量列表项(哈希键只包含少量键值对)，并且每个列表项(键值对的键]]></description>
</item></channel>
</rss>
