<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - NarcissusBlog</title>
        <link>http://wen-nan.github.io/posts/</link>
        <description>所有文章 | NarcissusBlog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 14 Sep 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://wen-nan.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Redis(七)对象</title>
    <link>http://wen-nan.github.io/posts/redis-%E5%AF%B9%E8%B1%A1/</link>
    <pubDate>Tue, 14 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/redis-%E5%AF%B9%E8%B1%A1/</guid>
    <description><![CDATA[对象学习]]></description>
</item><item>
    <title>回溯算法(或DFS)</title>
    <link>http://wen-nan.github.io/posts/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</link>
    <pubDate>Tue, 14 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</guid>
    <description><![CDATA[1、框架 深度优先搜索就是回溯算法，解决一个回溯问题，实际上就是一个决策树的遍历过程。需要思考三个问题： 路径：已经做出的选择。 选择列表：当前可]]></description>
</item><item>
    <title>Redis(六)压缩列表</title>
    <link>http://wen-nan.github.io/posts/redis-%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</link>
    <pubDate>Mon, 13 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/redis-%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</guid>
    <description><![CDATA[压缩列表(ziplist)是列表键和哈希键的底层实现之一。当一个列表键只包含少量列表项(哈希键只包含少量键值对)，并且每个列表项(键值对的键]]></description>
</item><item>
    <title>广度优先搜索</title>
    <link>http://wen-nan.github.io/posts/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</link>
    <pubDate>Mon, 13 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</guid>
    <description><![CDATA[BFS的核心思想就是把一些问题抽象成图，从一个点开始，向四周开始扩散。一般来说，写BFS算法都用队列这种数据结构，每次将一个节点周围所有节点]]></description>
</item><item>
    <title>Redis(五)整数集合</title>
    <link>http://wen-nan.github.io/posts/redis-%E6%95%B4%E6%95%B0%E9%9B%86%E5%90%88/</link>
    <pubDate>Sun, 12 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/redis-%E6%95%B4%E6%95%B0%E9%9B%86%E5%90%88/</guid>
    <description><![CDATA[整数集合是集合键的底层实现之一，当一个集合只包含整数值元素，并且集合元素不多时，Redis会使用整数集合作为集合键的底层实现。 1、整数集合的]]></description>
</item><item>
    <title>Redis(三)字典</title>
    <link>http://wen-nan.github.io/posts/redis-%E5%AD%97%E5%85%B8/</link>
    <pubDate>Sat, 11 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/redis-%E5%AD%97%E5%85%B8/</guid>
    <description><![CDATA[字典，又称为符号表、关联数组或映射，是一种用于保存键值对的抽象数据结构。字典中每个键都是独一无二的。字典在Redis中应用相当广泛，比如Re]]></description>
</item><item>
    <title>Redis(四)跳跃表</title>
    <link>http://wen-nan.github.io/posts/redis-%E8%B7%B3%E8%B7%83%E8%A1%A8/</link>
    <pubDate>Sat, 11 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/redis-%E8%B7%B3%E8%B7%83%E8%A1%A8/</guid>
    <description><![CDATA[跳跃表是一种有序数据结构，通过在每个节点中维持多个指向其他节点的指针，从而达到快速访问节点的目的。支持平均O(logN)、最坏O(N)复杂度]]></description>
</item><item>
    <title>Redis(一)简单动态字符串</title>
    <link>http://wen-nan.github.io/posts/redis-%E7%AE%80%E5%8D%95%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Thu, 09 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/redis-%E7%AE%80%E5%8D%95%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[概述 简单来说 Redis 就是一个使用 C 语言开发的数据库， 是速度非常快的非关系型（NoSQL）内存键值数据库，可以存储键和五种不同类型的值之间的映射。键]]></description>
</item><item>
    <title>Redis(二)链表</title>
    <link>http://wen-nan.github.io/posts/redis-%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Thu, 09 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/redis-%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[链表提供了高效的节点重排能力，以及排序性的节点访问方式，并且可以通过增删节点来灵活地调整链表的长度。 链表在Redis中应用非常广泛，比如列表]]></description>
</item><item>
    <title>栈和队列</title>
    <link>http://wen-nan.github.io/posts/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</link>
    <pubDate>Thu, 09 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://wen-nan.github.io/posts/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</guid>
    <description><![CDATA[队列是一种先进先出的数据结构，栈是一种先进后出的数据结构。这两种数据结构底层都是数组或者链表实现的，只是API限定了它们的特性。 栈实现队列 队]]></description>
</item></channel>
</rss>
